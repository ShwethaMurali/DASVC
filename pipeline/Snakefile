shell.prefix("module load lastz/1.02.00 samtools/0.1.19 ucsc ; set -eo pipefail ; ")

import os
import glob
import csv

REGIONS="chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY".split()

LZ = "~zevk/lastz-distrib/bin/lastz_32"
POST = "--gfextend --gapped --step=25 --chain  --inner=1000 --notransition --format=lav --identity=80"
POSTB = "--gfextend --gapped --step=25 --chain  --inner=1000 --notransition ‑‑format=general:name2,name1,start1,end1,strand2,align2,nmatch,ngap,length2,identity,continuity,coverage,cigarx --identity=80"


TARGET="/net/eichler/vol2/eee_shared/assemblies/hg38/ucsc.hg38.no_alts.fasta"
QUERY="/net/eichler/vol25/projects/whole_genome_assembly/nobackups/chimp/Drafts/V3.0a-falcon/clint.contigs.quiver.pilon.masked.fasta"

#REGIONS=[line.rstrip('\n') for line in open(REGION_FILE)]
LOCAL="/var/tmp/zevk/genomes"
LT="%s/ucsc.hg38.no_alts.fasta" % (LOCAL)
LQ="%s/clint.contigs.quiver.pilon.masked.fasta" % (LOCAL)

RS_LT="mkdir -p %s ; rsync --bwlimit=50000 -v %s %s/" % (LOCAL, TARGET, LOCAL)
RS_LQ="rsync --bwlimit=50000 -v %s %s/" % (QUERY, LOCAL)

FAIDX="samtools faidx %s/ucsc.hg38.no_alts.fasta" % (LOCAL)

rule dummy:
     input: expand("raw_general_cigar/{contig}.txt", contig=REGIONS)

rule filtNet:
     input:  "net/all-no-class.net"
     output: "filt_net/all-no-class.filt.net"
     params:  sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     shell:  "netFilter -chimpSyn {input} > {output} && netToBed {output} filt_net/all-no-class-filter.bed"

rule net:
     input: CHAIN="merged_chains/all.chain.filter.prenet.chain", TS="stats/target.sizes", QS="stats/query.sizes"
     output: "net/all-no-class.net"
     params:  sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     shell:  "chainNet {input.CHAIN}  -minSpace=1 {input.TS} {input.QS}  stdout /dev/null  |  netSyntenic stdin {output}"

rule filter:
     input: CHAINS="merged_chains/all.chain", TS="stats/target.sizes", QS="stats/query.sizes"
     params:  sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     output: "merged_chains/all.chain.filter.prenet.chain"
     shell: "chainPreNet {input.CHAINS} {input.TS} {input.QS} {output}"

rule merge:
     input: expand("chained_psl/{contig}.chained.psl", contig=REGIONS)
     output: "merged_chains/all.chain"
     params:  sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     shell: "chainMergeSort {input} > {output}"

rule chain:
     input: PSL="raw_psl/{contig}.psl", T2BIT="2bits/target.2bit", Q2BIT="2bits/query.2bit"
     output: "chained_psl/{contig}.chained.psl"
     params:  sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     shell: "axtChain -linearGap=medium -psl {input.PSL} {input.T2BIT} {input.Q2BIT} {output}"

rule lav_to_psl:
     input:  "raw_lav/{contig}.lav"
     output: "raw_psl/{contig}.psl"
     params:  sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     shell:   "lavToPsl {input} {output}"

rule runLastZgeneral:
     input:   T={TARGET}, Q={QUERY}
     output:  "raw_general_cigar/{contig}.txt"
     params:  sge_opts="-l mfree=15G -l h_rt=48:00:00 -q eichler-short.q -l disk_free=10G"
     shell:   "rm -rf {LOCAL} ; {RS_LT} ; {RS_LQ} ; {FAIDX} {wildcards.contig} > $TMPDIR/q.fasta ; {LZ} $TMPDIR/q.fasta {LQ} {POSTB} > {output} "

rule runLastZ:
     input:   T={TARGET}, Q={QUERY}
     output:  "raw_lav/{contig}.lav"
     params:  sge_opts="-l mfree=15G -l h_rt=48:00:00 -q eichler-short.q -l disk_free=10G"
     shell:   "rm -rf {LOCAL} ; {RS_LT} ; {RS_LQ} ; {FAIDX} {wildcards.contig} > $TMPDIR/q.fasta ; {LZ} $TMPDIR/q.fasta {LQ} {POST} > {output} "

rule stats:
     input: T={TARGET}, Q={QUERY}
     output: "stats/target.sizes", "stats/query.sizes"
     params: sge_opts="-l mfree=10G -l h_rt=24:00:00 -q eichler-short.q"
     shell: "faSize {input.T} -detailed > {output[0]} && faSize {input.Q} -detailed > {output[1]}"

rule twobit:
     input: T={TARGET}, Q={QUERY}
     output: "2bits/target.2bit", "2bits/query.2bit"
     params: sge_opts="-l mfree=20G -l h_rt=24:00:00 -q eichler-short.q"
     shell: "faToTwoBit {input.T} {output[0]} && faToTwoBit {input.Q} {output[1]}"
